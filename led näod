#include "Adafruit_GFX.h"
#include "Adafruit_HT1632.h"

#define HT_DATA 2
#define HT_WR   3
#define HT_CS   4
#define HT_CS2  5

// use this line for single matrix
//Adafruit_HT1632LEDMatrix matrix = Adafruit_HT1632LEDMatrix(HT_DATA, HT_WR, HT_CS);
// use this line for two matrices!
Adafruit_HT1632LEDMatrix matrix = Adafruit_HT1632LEDMatrix(HT_DATA, HT_WR, HT_CS, HT_CS2);
 


void setup() {
  Serial.begin(9600);
  matrix.begin(ADA_HT1632_COMMON_16NMOS);
  //matrix.fillScreen();
  matrix.clearScreen();
  
  delay(500);
}

void loop() {

  
  smile();
  delay(2000);
  matrix.clearScreen();
  sad();
  delay(2000);
  matrix.clearScreen();
  neutral();
  delay(2000);
  matrix.clearScreen();
  death();
  delay(2000);
  matrix.clearScreen();
  heart();
  delay(2000);
  matrix.clearScreen();
  delay(2000);

  // whew!
}
void smile(){
 //outline:
  matrix.drawRect(0, 0, matrix.width()/2, matrix.height(), 1);

  //circle:
  matrix.drawCircle(matrix.width()/4-1, matrix.height()/2-1, 5, 1);

  //eyes:
  matrix.drawPixel(9, 5, 1);
  matrix.drawPixel(13, 5, 1);

  // :)
  matrix.drawPixel(8, 8, 1);
  matrix.drawPixel(9, 9, 1);
  matrix.drawPixel(10, 10, 1);
  matrix.drawPixel(11, 10, 1);
  matrix.drawPixel(12, 10, 1);
  matrix.drawPixel(13, 9, 1);
  matrix.drawPixel(14, 8, 1);
  
  matrix.writeScreen();
  
  }

void sad(){
  //outline:
  matrix.drawRect(0, 0, matrix.width()/2, matrix.height(), 1);

  //circle:
  matrix.drawCircle(matrix.width()/4-1, matrix.height()/2-1, 5, 1);

  //eyes:
  matrix.drawPixel(9, 5, 1);
  matrix.drawPixel(13, 5, 1);

  // :(
  matrix.drawPixel(9, 8, 1);
  matrix.drawPixel(10, 7, 1);
  matrix.drawPixel(11, 7, 1);
  matrix.drawPixel(12, 7, 1);
  matrix.drawPixel(13, 8, 1);
  matrix.drawPixel(9, 9, 1);
  matrix.drawPixel(13, 9, 1);
  
  matrix.writeScreen();
  
  }

void neutral(){
  
  //outline:
  matrix.drawRect(0, 0, matrix.width()/2, matrix.height(), 1);

  //circle:
  matrix.drawCircle(matrix.width()/4-1, matrix.height()/2-1, 5, 1);

  //eyes:
  matrix.drawPixel(9, 5, 1);
  matrix.drawPixel(13, 5, 1);

  // :|
  matrix.drawPixel(8, 8, 1);
  matrix.drawPixel(9, 8, 1);
  matrix.drawPixel(10, 8, 1);
  matrix.drawPixel(11, 8, 1);
  matrix.drawPixel(12, 8, 1);
  matrix.drawPixel(13, 8, 1);
  matrix.drawPixel(14, 8, 1);
  
  matrix.writeScreen();
  
  }

void death(){
  //outline:
  matrix.drawRect(0, 0, matrix.width()/2, matrix.height(), 1);

  // X1
  matrix.drawPixel(8, 5, 1);
  matrix.drawPixel(7, 6, 1);
  matrix.drawPixel(9, 4, 1);  
  matrix.drawPixel(7, 4, 1);
  matrix.drawPixel(9, 6, 1);
  matrix.drawPixel(6, 3, 1);
  matrix.drawPixel(6, 7, 1);
  matrix.drawPixel(10, 3, 1);
  matrix.drawPixel(10, 7, 1);
  
  // X2
  matrix.drawPixel(14, 5, 1);
  matrix.drawPixel(13, 6, 1);
  matrix.drawPixel(15, 4, 1);  
  matrix.drawPixel(13, 4, 1);
  matrix.drawPixel(15, 6, 1);
  matrix.drawPixel(12, 3, 1);
  matrix.drawPixel(12, 7, 1);
  matrix.drawPixel(16, 3, 1);
  matrix.drawPixel(16, 7, 1);

  // x(
  matrix.drawPixel(10, 10, 1);
  matrix.drawPixel(11, 10, 1);
  matrix.drawPixel(12, 10, 1);
  matrix.drawPixel(13, 11, 1);
  matrix.drawPixel(8, 12, 1);
  matrix.drawPixel(9, 11, 1);
  matrix.drawPixel(14, 12, 1);
  matrix.writeScreen();
  
  }




void heart(){
  //outline:
  matrix.drawRect(0, 0, matrix.width()/2, matrix.height(), 1);
  matrix.fillCircle(matrix.width()/4-1, matrix.height()/2, 3, 1);

  matrix.drawPixel(9, 5, 1);
  matrix.drawPixel(8, 6, 1);
  matrix.drawPixel(9, 4, 1);
  matrix.drawPixel(8, 5, 1);
  matrix.drawPixel(13, 5, 1);
  matrix.drawPixel(14, 6, 1);
   matrix.drawPixel(13, 4, 1);
  matrix.drawPixel(14, 5, 1);
  matrix.drawPixel(11, 12, 1);
  matrix.drawPixel(7, 8, 1);
  matrix.drawPixel(7, 6, 1);
  matrix.drawPixel(7, 7, 1);
  matrix.drawPixel(15, 8, 1);
  matrix.drawPixel(15, 6, 1);
  matrix.drawPixel(15, 7, 1);
  matrix.drawPixel(12, 4, 1);
  matrix.drawPixel(10, 4, 1);
  
  matrix.drawPixel(13, 4, 1);
  matrix.drawPixel(9, 4, 1);
  /*
  matrix.drawPixel(8, 5, 1);
  matrix.drawPixel(7, 6, 1);
  matrix.drawPixel(9, 4, 1);  
  matrix.drawPixel(7, 4, 1);
  matrix.drawPixel(9, 6, 1);
  matrix.drawPixel(6, 3, 1);
  matrix.drawPixel(6, 7, 1);
  matrix.drawPixel(10, 3, 1);
  matrix.drawPixel(10, 7, 1);*/
  
  matrix.writeScreen();
 
  }
